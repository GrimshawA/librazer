import std

SnakeBlock: class {
	x: int32
	y: int32
}

App: class {
	counter: int32
	i: int32
	size: int32
	window: Window
	mTimer: Timer
	time: int32

    snake: array<SnakeBlock> // Should instance ArrayT for type snake_block

    function main() {
    	snake.push(new SnakeBlock());
    	snake.push(new SnakeBlock());
    	snake.push(new SnakeBlock());
    	snake.push(new SnakeBlock());
    	//snake.push(new SnakeBlock());
    	//snake.push(new SnakeBlock());

		size = 4;
    	i = 0;
    	time = 5;

    	mTimer = new Timer();
		
		for (i = 0; i < snake.size(); ++i)
		{
			SnakeBlock s = snake.at(i);
			s.y = 50 * i;
		}

		window.open();
		window.setFillColor(255, 0, 255);

		while(window.running()) {
			window.poll();

			update();

			window.setFillColor(0, 0, 0);
			window.drawRect(0, 0, 400, 400);

			for (i = 0; i < snake.size(); ++i)
			{
				SnakeBlock blk = snake.at(i);
				window.setFillColor(255, 255, 255);
				window.drawRect(i * 50, blk.y, 20, 20);
			}

			window.display();
		}
    }

    function update() {

		/*int32 dt = mTimer.restart();

		time = time - dt;*/

		SnakeBlock s = snake.at(0);

		s.x = 300;
		
		/*if (time < 0) {
			time = 5;
			//timerEvent(wnd);
			
			
		}*/
	}
}